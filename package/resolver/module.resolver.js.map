{"version":3,"sources":["resolver/module.resolver.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,gFAA4E;AAE5E,8DAA0D;AAC1D,2CAAyD;AACzD,6CAAkD;AAKlD,IAAa,cAAc,GAA3B;IAEI,YAC4C,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;IACpE,CAAC;IAGC,OAAO;;YACT,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;YAClD,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,CAAC;QACvD,CAAC;KAAA;CACJ,CAAA;AAJG;IADC,eAAK,CAAC,SAAS,CAAC;;;;6CAIhB;AAVQ,cAAc;IAF1B,kBAAQ,CAAC,QAAQ,CAAC;IAClB,wBAAe,CAAC,4CAAoB,CAAC;IAI7B,WAAA,eAAM,CAAC,8BAAa,CAAC,CAAA;qCAAiC,8BAAa;GAH/D,cAAc,CAW1B;AAXY,wCAAc","file":"module.resolver.js","sourcesContent":["import { ExceptionInterceptor } from \"../interceptor/exception.interceptor\";\nimport { ModulesData } from \"../interface/module/modules.data\";\nimport { ModuleService } from \"../service/module.service\";\nimport { Inject, UseInterceptors } from \"@nestjs/common\";\nimport { Query, Resolver } from \"@nestjs/graphql\";\n\n/* 模块，代表了初始化时遍历发现的具有权限、角色的模块，可以包含权限、功能、角色，模块删除时，相应的权限、角色、功能也会被删除 */\n@Resolver(\"Module\")\n@UseInterceptors(ExceptionInterceptor)\nexport class ModuleResolver {\n\n    constructor(\n        @Inject(ModuleService) private readonly moduleService: ModuleService\n    ) { }\n\n    @Query(\"modules\")\n    async modules(): Promise<ModulesData> {\n        const modules = await this.moduleService.getAll();\n        return { code: 200, message: \"获取模块信息成功\", modules };\n    }\n}\n"]}