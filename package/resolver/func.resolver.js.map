{"version":3,"sources":["resolver/func.resolver.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,gFAA4E;AAC5E,2CAAwE;AACxE,0DAAsD;AACtD,6CAAqD;AAQrD,IAAa,YAAY,GAAzB;IAEI,YAC0C,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAC/D,CAAC;IAGE,UAAU,CAAC,GAAY,EAAE,IAA2C;;YACtE,MAAM,EAAE,WAAW,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;YACnC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,EAAE;gBACvB,MAAM,IAAI,sBAAa,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;aACxC;YACD,MAAM,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YACrD,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC;QAC5C,CAAC;KAAA;IAGK,UAAU,CAAC,GAAY,EAAE,IAAkC;;YAC7D,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE;gBACd,MAAM,IAAI,sBAAa,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;aACxC;YACD,MAAM,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;YAC5C,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC;QAC5C,CAAC;KAAA;IAGK,UAAU,CAAC,GAAY,EAAE,IAAoB;;YAC/C,MAAM,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,EAAE,EAAE;gBACL,MAAM,IAAI,sBAAa,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;aACxC;YACD,MAAM,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;YACtC,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC;QAC5C,CAAC;KAAA;IAGK,cAAc,CAAC,GAAY,EAAE,IAAkD;;YACjF,MAAM,EAAE,EAAE,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC;YACnC,IAAI,CAAC,EAAE,EAAE;gBACL,MAAM,IAAI,sBAAa,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;aACxC;YACD,MAAM,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,EAAE,EAAE,aAAa,CAAC,CAAC;YACzD,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;QAC9C,CAAC;KAAA;CACJ,CAAA;AAtCG;IADC,kBAAQ,CAAC,YAAY,CAAC;;;;8CAQtB;AAGD;IADC,kBAAQ,CAAC,YAAY,CAAC;;;;8CAQtB;AAGD;IADC,kBAAQ,CAAC,YAAY,CAAC;;;;8CAQtB;AAGD;IADC,kBAAQ,CAAC,gBAAgB,CAAC;;;;kDAQ1B;AA5CQ,YAAY;IAFxB,kBAAQ,CAAC,MAAM,CAAC;IAChB,wBAAe,CAAC,4CAAoB,CAAC;IAI7B,WAAA,eAAM,CAAC,0BAAW,CAAC,CAAA;qCAA+B,0BAAW;GAHzD,YAAY,CA6CxB;AA7CY,oCAAY","file":"func.resolver.js","sourcesContent":["import { ExceptionInterceptor } from \"../interceptor/exception.interceptor\";\nimport { HttpException, Inject, UseInterceptors } from \"@nestjs/common\";\nimport { FuncService } from \"../service/func.service\";\nimport { Mutation, Resolver } from \"@nestjs/graphql\";\nimport { Func } from \"../model/func.entity\";\nimport { Data } from \"../interface/data\";\nimport { Request } from \"express\";\n\n/* 功能是权限的集合，且只能包含一个模块下的权限，所以功能也属于某个模块 */\n@Resolver(\"Func\")\n@UseInterceptors(ExceptionInterceptor)\nexport class FuncResolver {\n\n    constructor(\n        @Inject(FuncService) private readonly funcService: FuncService\n    ) {}\n\n    @Mutation(\"createFunc\")\n    async createFunc(req: Request, body: { moduleToken: string, name: string }): Promise<Data> {\n        const { moduleToken, name } = body;\n        if (!moduleToken || !name) {\n            throw new HttpException(\"缺少参数\", 400);\n        }\n        await this.funcService.createFunc(moduleToken, name);\n        return { code: 200, message: \"创建功能成功\" };\n    }\n\n    @Mutation(\"updateFunc\")\n    async updateFunc(req: Request, body: { id: number, name: string }): Promise<Data> {\n        const { id, name } = body;\n        if (!id || !name) {\n            throw new HttpException(\"缺少参数\", 400);\n        }\n        await this.funcService.updateFunc(id, name);\n        return { code: 200, message: \"更新功能成功\" };\n    }\n\n    @Mutation(\"deleteFunc\")\n    async deleteFunc(req: Request, body: { id: number }): Promise<Data> {\n        const { id } = body;\n        if (!id) {\n            throw new HttpException(\"缺少参数\", 400);\n        }\n        await this.funcService.deleteFunc(id);\n        return { code: 200, message: \"删除功能成功\" };\n    }\n\n    @Mutation(\"setPermissions\")\n    async setPermissions(req: Request, body: { id: number, permissionIds: Array<number> }): Promise<Data> {\n        const { id, permissionIds } = body;\n        if (!id) {\n            throw new HttpException(\"缺少参数\", 400);\n        }\n        await this.funcService.setPermissions(id, permissionIds);\n        return { code: 200, message: \"设置功能权限成功\" };\n    }\n}\n"]}