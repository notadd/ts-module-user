{"version":3,"sources":["decorator/permissions.decorator.ts"],"names":[],"mappings":";;AAAA,4BAA0B;AAEb,QAAA,qBAAqB,GAAG,4BAA4B,CAAC;AAElE,qBAA4B,WAAyD;IACjF,OAAO,CAAC,MAAW,EAAE,GAAI,EAAE,UAAW,EAAE,EAAE;QACtC,IAAI,UAAU,EAAE;YACZ,MAAM,KAAK,GAAG,OAAO,CAAC,WAAW,CAAC,6BAAqB,EAAE,MAAM,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC;YAC5E,OAAO,CAAC,cAAc,CAAC,6BAAqB,EAAE,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;YACtF,OAAO,UAAU,CAAC;SACrB;QACD,MAAM,KAAK,GAAG,OAAO,CAAC,WAAW,CAAC,6BAAqB,EAAE,MAAM,CAAC,IAAI,EAAE,CAAC;QACvE,OAAO,CAAC,cAAc,CAAC,6BAAqB,EAAE,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC;QACjF,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;AACN,CAAC;AAXD,kCAWC","file":"permissions.decorator.js","sourcesContent":["import \"reflect-metadata\";\n\nexport const PERMISSION_DEFINITION = \"user:permission_definition\";\n\nexport function Permissions(definitions: Array<{ name: string, description: string }>): ClassDecorator | MethodDecorator {\n    return (target: any, key?, descriptor?) => {\n        if (descriptor) {\n            const exist = Reflect.getMetadata(PERMISSION_DEFINITION, target, key) || [];\n            Reflect.defineMetadata(PERMISSION_DEFINITION, definitions.concat(exist), target, key);\n            return descriptor;\n        }\n        const exist = Reflect.getMetadata(PERMISSION_DEFINITION, target) || [];\n        Reflect.defineMetadata(PERMISSION_DEFINITION, definitions.concat(exist), target);\n        return target;\n    };\n}\n"]}