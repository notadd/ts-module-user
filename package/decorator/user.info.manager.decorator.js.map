{"version":3,"sources":["decorator/user.info.manager.decorator.ts"],"names":[],"mappings":";;AAAA,4BAA0B;AAEb,QAAA,iBAAiB,GAAG,wBAAwB,CAAC;AAQ1D;IACI,OAAO,CAAC,MAAW,EAAE,EAAE;QACnB,OAAO,CAAC,cAAc,CAAC,yBAAiB,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;QACxD,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;AACN,CAAC;AALD,0CAKC","file":"user.info.manager.decorator.js","sourcesContent":["import \"reflect-metadata\";\n\nexport const USER_INFO_MANAGER = \"user:user_info_manager\";\n\n/*\n用户信息管理器装饰器，用来标识一个组件为用户信息管理器\n从而使用户中心在获取用户信息、删除用户等操作时，可以调用用户信息管理器的方法来对其他模块中的用户信息进行操作\n因为其他模块不是全局模块，所以获取用户信息管理器组件的方法并不是通过nestjs的模块依赖组件注入，\n而是根据装饰器的标识对组件进行遍历，将用户信息管理器保存到UserService中\n*/\nexport function UserInfoManager(): ClassDecorator {\n    return (target: any) => {\n        Reflect.defineMetadata(USER_INFO_MANAGER, true, target);\n        return target;\n    };\n}\n"]}