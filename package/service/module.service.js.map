{"version":3,"sources":["service/module.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,2CAA2C;AAC3C,6CAAmD;AACnD,qCAAqC;AACrC,0DAAgD;AAGhD,IAAa,aAAa,GAA1B;IAEI,YAC+C,gBAAoC;QAApC,qBAAgB,GAAhB,gBAAgB,CAAoB;IAEnF,CAAC;IAEK,MAAM;;YACR,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,CAAE,OAAO,EAAE,OAAO,EAAE,aAAa,CAAE,EAAE,CAAC,CAAC;QAC1F,CAAC;KAAA;CAEJ,CAAA;AAXY,aAAa;IADzB,kBAAS,EAAE;IAIH,WAAA,0BAAgB,CAAC,sBAAM,CAAC,CAAA;qCAAoC,oBAAU;GAHlE,aAAa,CAWzB;AAXY,sCAAa","file":"module.service.js","sourcesContent":["import { Component } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\nimport { Module } from \"../model/module.entity\";\n\n@Component()\nexport class ModuleService {\n\n    constructor(\n        @InjectRepository(Module) private readonly moduleRepository: Repository<Module>\n    ) {\n    }\n\n    async getAll(): Promise<Array<Module>> {\n        return this.moduleRepository.find({ relations: [ \"roles\", \"funcs\", \"permissions\" ] });\n    }\n\n}\n"]}