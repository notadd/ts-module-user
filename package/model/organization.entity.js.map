{"version":3,"sources":["model/organization.entity.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,qCAA+G;AAC/G,+CAAqC;AAMrC,IAAa,YAAY,oBAAzB;CAqDC,CAAA;AAlDG;IADC,gCAAsB,EAAE;;wCACd;AAQX;IALC,gBAAM,CAAC;QACJ,IAAI,EAAE,MAAM;QACZ,MAAM,EAAE,EAAE;QACV,MAAM,EAAE,IAAI;KACf,CAAC;;0CACW;AASb;IANC,oBAAU,CAAC,IAAI,CAAC,EAAE,CAAC,kBAAI,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE;QAClD,aAAa,EAAE,IAAI;QACnB,aAAa,EAAE,IAAI;QACnB,IAAI,EAAE,KAAK;QACX,KAAK,EAAE,KAAK;KACf,CAAC;8BACK,KAAK;2CAAO;AAOnB;IAJC,gBAAM,CAAC;QACJ,IAAI,EAAE,UAAU;QAChB,QAAQ,EAAE,IAAI;KACjB,CAAC;;8CACe;AAgBjB;IAbC,mBAAS,CAAC,IAAI,CAAC,EAAE,CAAC,cAAY,EAAE,WAAW,CAAC,EAAE,CAAC,WAAW,CAAC,QAAQ,EAAE;QAClE,aAAa,EAAE,IAAI;QACnB,aAAa,EAAE,IAAI;QACnB,aAAa,EAAE,KAAK;QACpB,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE,KAAK;QACX,KAAK,EAAE,KAAK;QACZ,QAAQ,EAAE,SAAS;KACtB,CAAC;IACD,oBAAU,CAAC;QACR,IAAI,EAAE,UAAU;QAChB,oBAAoB,EAAE,IAAI;KAC7B,CAAC;8BACM,YAAY;4CAAC;AASrB;IANC,mBAAS,CAAC,IAAI,CAAC,EAAE,CAAC,cAAY,EAAE,WAAW,CAAC,EAAE,CAAC,WAAW,CAAC,MAAM,EAAE;QAChE,aAAa,EAAE,IAAI;QACnB,aAAa,EAAE,IAAI;QACnB,IAAI,EAAE,KAAK;QACX,KAAK,EAAE,KAAK;KACf,CAAC;8BACQ,KAAK;8CAAe;AApDrB,YAAY;IADxB,gBAAM,CAAC,cAAc,CAAC;GACV,YAAY,CAqDxB;AArDY,oCAAY","file":"organization.entity.js","sourcesContent":["import { Column, Entity, JoinColumn, ManyToMany, ManyToOne, OneToMany, PrimaryGeneratedColumn } from \"typeorm\";\nimport { User } from \"./user.entity\";\n\n/* 组织实体，组织可以互相包含，一个组织下可以包含多个组织，还可以包含多个用户\n   组织完全与模块无关\n*/\n@Entity(\"organization\")\nexport class Organization {\n\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    /* 组织名称不可重复 */\n    @Column({\n        name: \"name\",\n        length: 20,\n        unique: true\n    })\n    name: string;\n\n    /* 组织下包含的用户，这些用户直属这个组织，与子组织无关 */\n    @ManyToMany(type => User, user => user.organizations, {\n        cascadeInsert: true,\n        cascadeUpdate: true,\n        lazy: false,\n        eager: false\n    })\n    users: Array<User>;\n\n    /* 父组织id，可以不存在父组织，说明为根组织 */\n    @Column({\n        name: \"parentId\",\n        nullable: true\n    })\n    parentId: number;\n\n    /* 父组织 */\n    @ManyToOne(type => Organization, orientation => orientation.children, {\n        cascadeInsert: true,\n        cascadeUpdate: true,\n        cascadeRemove: false,\n        nullable: true,\n        lazy: false,\n        eager: false,\n        onDelete: \"CASCADE\"\n    })\n    @JoinColumn({\n        name: \"parentId\",\n        referencedColumnName: \"id\"\n    })\n    parent: Organization;\n\n    /* 子组织，当删除这个组织时，默认如果存在子组织，则报错不删除，如果指定force为true，则强制删除其所有子孙组织 */\n    @OneToMany(type => Organization, orientation => orientation.parent, {\n        cascadeInsert: true,\n        cascadeUpdate: true,\n        lazy: false,\n        eager: false\n    })\n    children: Array<Organization>;\n}\n"]}