{"version":3,"sources":["model/score.entity.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,qCAA+F;AAC/F,2DAAgD;AAChD,+CAAqC;AAKrC,IAAa,KAAK,GAAlB;CAoDC,CAAA;AAjDG;IADC,gCAAsB,EAAE;;iCACd;AASX;IANC,gBAAM,CAAC;QACJ,IAAI,EAAE,OAAO;QACb,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,EAAE;QACb,KAAK,EAAE,CAAC;KACX,CAAC;;oCACY;AAGd;IADC,gBAAM,EAAE;;0CACW;AAkBpB;IAZC,mBAAS,CAAC,IAAI,CAAC,EAAE,CAAC,6BAAS,EAAE,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,MAAM,EAAE;QACzD,aAAa,EAAE,IAAI;QACnB,aAAa,EAAE,KAAK;QACpB,aAAa,EAAE,KAAK;QACpB,QAAQ,EAAE,SAAS;QACnB,IAAI,EAAE,KAAK;QACX,KAAK,EAAE,KAAK;KACf,CAAC;IACD,oBAAU,CAAC;QACR,IAAI,EAAE,aAAa;QACnB,oBAAoB,EAAE,IAAI;KAC7B,CAAC;8BACS,6BAAS;wCAAC;AAGrB;IADC,gBAAM,EAAE;;qCACM;AAcf;IAZC,mBAAS,CAAC,IAAI,CAAC,EAAE,CAAC,kBAAI,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE;QAC1C,aAAa,EAAE,IAAI;QACnB,aAAa,EAAE,KAAK;QACpB,aAAa,EAAE,KAAK;QACpB,QAAQ,EAAE,SAAS;QACnB,IAAI,EAAE,KAAK;QACX,KAAK,EAAE,KAAK;KACf,CAAC;IACD,oBAAU,CAAC;QACR,IAAI,EAAE,QAAQ;QACd,oBAAoB,EAAE,IAAI;KAC7B,CAAC;8BACI,kBAAI;mCAAC;AAlDF,KAAK;IAFjB,gBAAM,CAAC,OAAO,CAAC;IACf,eAAK,CAAC,oBAAoB,EAAE,CAAE,aAAa,EAAE,QAAQ,CAAE,CAAC;GAC5C,KAAK,CAoDjB;AApDY,sBAAK","file":"score.entity.js","sourcesContent":["import { Column, Entity, Index, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from \"typeorm\";\nimport { ScoreType } from \"./score.type.entity\";\nimport { User } from \"./user.entity\";\n\n/* 积分值，属于用户 */\n@Entity(\"score\")\n@Index(\"scoreTypeId_userId\", [ \"scoreTypeId\", \"userId\" ])\nexport class Score {\n\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    /* 积分值，要采用定点小数存储，浮点数存储会有误差，小数点后6位，小数点前8位 */\n    @Column({\n        name: \"value\",\n        type: \"decimal\",\n        precision: 14,\n        scale: 6\n    })\n    value: number;\n\n    @Column()\n    scoreTypeId: number;\n\n    /*积分所属积分类型，当积分类型删除时所有积分会级联删除，由于积分不被其他表引用，所以级联删除不会出现问题\n      之所以不使用积分类型名称作为被引用的键，是因为积分类型名称可以修改，而要保证修改后的积分类型仍能找到所属积分必须将积分与积分类型关联起来\n      如同用户信息与信息项关联起来\n    */\n    @ManyToOne(type => ScoreType, scoreType => scoreType.scores, {\n        cascadeInsert: true,\n        cascadeUpdate: false,\n        cascadeRemove: false,\n        onDelete: \"CASCADE\",\n        lazy: false,\n        eager: false\n    })\n    @JoinColumn({\n        name: \"scoreTypeId\",\n        referencedColumnName: \"id\"\n    })\n    scoreType: ScoreType;\n\n    @Column()\n    userId: number;\n\n    @ManyToOne(type => User, user => user.scores, {\n        cascadeInsert: true,\n        cascadeUpdate: false,\n        cascadeRemove: false,\n        onDelete: \"CASCADE\",\n        lazy: false,\n        eager: false\n    })\n    @JoinColumn({\n        name: \"userId\",\n        referencedColumnName: \"id\"\n    })\n    user: User;\n\n}\n"]}