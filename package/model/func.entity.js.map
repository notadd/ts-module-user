{"version":3,"sources":["model/func.entity.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,qCAAsH;AACtH,mDAAyC;AACzC,2DAAiD;AAQjD,IAAa,IAAI,GAAjB;CA+CC,CAAA;AA5CG;IADC,gCAAsB,EAAE;;gCACd;AAOX;IAJC,gBAAM,CAAC;QACJ,IAAI,EAAE,MAAM;QACZ,MAAM,EAAE,EAAE;KACb,CAAC;;kCACW;AAcb;IATC,oBAAU,CAAC,IAAI,CAAC,EAAE,CAAC,8BAAU,EAAE;QAC5B,aAAa,EAAE,IAAI;QACnB,aAAa,EAAE,KAAK;QACpB,IAAI,EAAE,KAAK;QACX,KAAK,EAAE,KAAK;KACf,CAAC;IACD,mBAAS,CAAC;QACP,IAAI,EAAE,qBAAqB;KAC9B,CAAC;8BACW,KAAK;yCAAa;AAM/B;IAHC,gBAAM,CAAC;QACJ,MAAM,EAAE,GAAG;KACd,CAAC;;yCACkB;AAgBpB;IAbC,mBAAS,CAAC,IAAI,CAAC,EAAE,CAAC,sBAAM,EAAE,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE;QAC/C,aAAa,EAAE,IAAI;QACnB,aAAa,EAAE,KAAK;QACpB,aAAa,EAAE,KAAK;QACpB,QAAQ,EAAE,UAAU;QACpB,QAAQ,EAAE,KAAK;QACf,IAAI,EAAE,KAAK;QACX,KAAK,EAAE,KAAK;KACf,CAAC;IACD,oBAAU,CAAC;QACR,IAAI,EAAE,aAAa;QACnB,oBAAoB,EAAE,OAAO;KAChC,CAAC;8BACM,sBAAM;oCAAC;AA9CN,IAAI;IAFhB,gBAAM,CAAC,UAAU,CAAC;IAClB,eAAK,CAAC,wBAAwB,EAAE,CAAE,MAAM,EAAE,aAAa,CAAE,CAAC;GAC9C,IAAI,CA+ChB;AA/CY,oBAAI","file":"func.entity.js","sourcesContent":["import { Column, Entity, Index, JoinColumn, JoinTable, ManyToMany, ManyToOne, PrimaryGeneratedColumn } from \"typeorm\";\nimport { Module } from \"./module.entity\";\nimport { Permission } from \"./permission.entity\";\n\n/* 功能实体，功能是权限的集合\n   功能与权限是多对多关系，但是功能是属于某个模块的，一个功能所包含的权限也都是同一个模块的\n   模块删除时，其下包含的功能将会一起删除\n*/\n@Entity(\"function\")\n@Index(\"func_name_module_token\", [ \"name\", \"moduleToken\" ])\nexport class Func {\n\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    /* 名称不能重复 */\n    @Column({\n        name: \"name\",\n        length: 20\n    })\n    name: string;\n\n    /* 功能下的所有权限，这些权限也都是属于一个模块的\n       功能删除时只会解除关系，而不是删除权限\n    */\n    @ManyToMany(type => Permission, {\n        cascadeInsert: true,\n        cascadeUpdate: false,\n        lazy: false,\n        eager: false\n    })\n    @JoinTable({\n        name: \"function_permission\",\n    })\n    permissions: Array<Permission>;\n\n    /* 所属模块id */\n    @Column({\n        length: 100\n    })\n    moduleToken: string;\n\n    /* 功能所属模块，模块删除时功能会级联删除，但是由于模块下的权限、功能、角色本身之间还有关联关系，所以只能分别删除这三者，再单独删除模块，所以关闭级联 */\n    @ManyToOne(type => Module, module => module.funcs, {\n        cascadeInsert: true,\n        cascadeUpdate: false,\n        cascadeRemove: false,\n        onDelete: \"RESTRICT\",\n        nullable: false,\n        lazy: false,\n        eager: false\n    })\n    @JoinColumn({\n        name: \"moduleToken\",\n        referencedColumnName: \"token\"\n    })\n    module: Module;\n}\n"]}