{"version":3,"sources":["model/info.item.entity.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,qCAAwF;AACxF,2DAAgD;AAChD,yDAA8C;AAO9C,IAAa,QAAQ,GAArB;CA2FC,CAAA;AAxFG;IADC,gCAAsB,EAAE;;oCACd;AAUX;IALC,gBAAM,CAAC;QACJ,IAAI,EAAE,MAAM;QACZ,MAAM,EAAE,GAAG;QACX,MAAM,EAAE,IAAI;KACf,CAAC;;sCACW;AAQb;IAJC,gBAAM,CAAC;QACJ,IAAI,EAAE,OAAO;QACb,MAAM,EAAE,GAAG;KACd,CAAC;;uCACY;AAMd;IAHC,gBAAM,CAAC;QACJ,IAAI,EAAE,SAAS;KAClB,CAAC;;yCACe;AAOjB;IAJC,gBAAM,CAAC;QACJ,IAAI,EAAE,aAAa;QACnB,MAAM,EAAE,GAAG;KACd,CAAC;;6CACkB;AAcpB;IAJC,gBAAM,CAAC;QACJ,IAAI,EAAE,MAAM;QACZ,MAAM,EAAE,GAAG;KACd,CAAC;;sCACW;AAMb;IAHC,gBAAM,CAAC;QACJ,IAAI,EAAE,WAAW;KACpB,CAAC;;2CACiB;AAQnB;IAHC,gBAAM,CAAC;QACJ,IAAI,EAAE,kBAAkB;KAC3B,CAAC;;iDACuB;AAMzB;IAHC,gBAAM,CAAC;QACJ,IAAI,EAAE,qBAAqB;KAC9B,CAAC;;oDAC0B;AAM5B;IAHC,gBAAM,CAAC;QACJ,IAAI,EAAE,OAAO;KAChB,CAAC;;uCACY;AAQd;IALC,mBAAS,CAAC,IAAI,CAAC,EAAE,CAAC,2BAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE;QACxD,OAAO,EAAE,CAAC,QAAQ,CAAE;QACpB,IAAI,EAAE,KAAK;QACX,KAAK,EAAE,KAAK;KACf,CAAC;8BACS,KAAK;2CAAW;AAQ3B;IALC,oBAAU,CAAC,IAAI,CAAC,EAAE,CAAC,6BAAS,EAAE,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,EAAE;QACzD,OAAO,EAAE,CAAC,QAAQ,CAAE;QACpB,IAAI,EAAE,KAAK;QACX,KAAK,EAAE,KAAK;KACf,CAAC;8BACM,KAAK;wCAAY;AA1FhB,QAAQ;IADpB,gBAAM,CAAC,WAAW,CAAC;GACP,QAAQ,CA2FpB;AA3FY,4BAAQ","file":"info.item.entity.js","sourcesContent":["import { Column, Entity, ManyToMany, OneToMany, PrimaryGeneratedColumn } from \"typeorm\";\nimport { InfoGroup } from \"./info.group.entity\";\nimport { UserInfo } from \"./user.info.entity\";\n\n/* 信息项实体，代表了用户需要额外填写的信息项\n   信息项与信息组为多对多关系，这个关系只是为了方便调用\n   信息项与用户也是多对多关系，这个关系是为了记录哪些信息已经被填写\n*/\n@Entity(\"info_item\")\nexport class InfoItem {\n\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    /* 信息项名称，如用户名、密码等\n       相互之间不能重复，也不能与已有的User实体属性重复\n    */\n    @Column({\n        name: \"name\",\n        length: 100,\n        unique: true\n    })\n    name: string;\n\n    /* 信息项标签，即前端显示中文名\n    */\n    @Column({\n        name: \"label\",\n        length: 100\n    })\n    label: string;\n\n    /* 是否为默认信息项，默认信息项不可删除、更改 、也不可添加到其他信息组中，默认信息项只能存在于默认信息组中*/\n    @Column({\n        name: \"default\",\n    })\n    default: boolean;\n\n    /* 信息项描述 */\n    @Column({\n        name: \"description\",\n        length: 200\n    })\n    description: string;\n\n    /* 信息项类型，即前端的表单类型\n       根据不同的信息项，在UserInfo中存储时计算方式不同，key为信息项名称，value为值，统一为字符串\n       文本框，都是存储为字符串\n       单选框存储为值，多选框、复选框存储为逗号分割的值\n       日期存储为字符串\n       下拉菜单是神码\n       图片、文件都先存储到云存储或者本地，然后存储其url\n    */\n    @Column({\n        name: \"type\",\n        length: 100\n    })\n    type: string;\n\n    /* 是否必填信息项，当提交一个信息组信息时，如果必填信息项未填，会返回错误 */\n    @Column({\n        name: \"necessary\",\n    })\n    necessary: boolean;\n\n    /* 注册页是否可见，如果注册页不可见，则当前端在注册请求信息项时不会返回\n       一个必填项必须是注册页可见的，非必填项随意\n    */\n    @Column({\n        name: \"register_visible\",\n    })\n    registerVisible: boolean;\n\n    /* 资料页是否可见，当前端需要用户资料信息时返回给它，目前暂定不可见就不返回 */\n    @Column({\n        name: \"information_visible\",\n    })\n    informationVisible: boolean;\n\n    /* 排序，由前端使用，后端不做验证(不要求一个信息组中信息项排序不可重复等等) */\n    @Column({\n        name: \"order\",\n    })\n    order: number;\n\n    /* 信息项下的用户信息，当信息项删除时用户信息也会删除，用户信息中外键列infoItemId引用了信息项的id，当信息项名称修改后仍能找到其包含的信息 */\n    @OneToMany(type => UserInfo, userInfo => userInfo.infoItem, {\n        cascade: [\"insert\" ],\n        lazy: false,\n        eager: false\n    })\n    userInfos: Array<UserInfo>;\n\n    /* 所属信息组，一个信息项可能属于多个信息组 */\n    @ManyToMany(type => InfoGroup, infoGroup => infoGroup.items, {\n        cascade: [\"insert\" ],\n        lazy: false,\n        eager: false\n    })\n    groups: Array<InfoGroup>;\n}\n"]}