{"version":3,"sources":["interceptor/exception.interceptor.ts"],"names":[],"mappings":";;;;;;;;AAAA,2CAA8F;AAC9F,0DAAuD;AAIvD,IAAa,oBAAoB,GAAjC;IAEI,SAAS,CAAC,OAAyB,EAAE,OAAwB;QAEzD,OAAO,OAAO,CAAC,IAAI,CACf,uBAAU,CAAC,CAAC,GAAG,EAAE,MAAM,EAAO,EAAE;YAC5B,IAAI,GAAG,YAAY,sBAAa,EAAE;gBAC9B,OAAO,OAAO,CAAC,OAAO,CAAC;oBACnB,IAAI,EAAE,GAAG,CAAC,SAAS,EAAE;oBACrB,OAAO,EAAE,GAAG,CAAC,WAAW,EAAE;iBAC7B,CAAC,CAAC;aACN;iBAAM,IAAI,GAAG,YAAY,KAAK,EAAE;gBAC7B,OAAO,OAAO,CAAC,OAAO,CAAC;oBACnB,IAAI,EAAE,GAAG;oBACT,OAAO,EAAE,WAAW,GAAG,CAAC,IAAI;iDACH,GAAG,CAAC,OAAO;iDACX,GAAG,CAAC,KAAK,EAAE;iBACvC,CAAC,CAAC;aACN;iBAAM;gBACH,OAAO,OAAO,CAAC,OAAO,CAAC;oBACnB,IAAI,EAAE,GAAG;oBACT,OAAO,EAAE,WAAW,GAAG,CAAC,QAAQ,EAAE,EAAE;iBACvC,CAAC,CAAC;aACN;QACL,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;CACJ,CAAA;AA1BY,oBAAoB;IADhC,mBAAU,EAAE;GACA,oBAAoB,CA0BhC;AA1BY,oDAAoB","file":"exception.interceptor.js","sourcesContent":["import { ExecutionContext, HttpException, Injectable, NestInterceptor } from \"@nestjs/common\";\nimport { catchError } from \"rxjs/operators/catchError\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class ExceptionInterceptor implements NestInterceptor {\n\n    intercept(context: ExecutionContext, stream$: Observable<any>): Observable<any> {\n\n        return stream$.pipe(\n            catchError((err, caught): any => {\n                if (err instanceof HttpException) {\n                    return Promise.resolve({\n                        code: err.getStatus(),\n                        message: err.getResponse()\n                    });\n                } else if (err instanceof Error) {\n                    return Promise.resolve({\n                        code: 500,\n                        message: `出现了意外错误:${err.name}\n                                               ${err.message}\n                                               ${err.stack}`\n                    });\n                } else {\n                    return Promise.resolve({\n                        code: 500,\n                        message: `出现了意外错误:${err.toString()}`\n                    });\n                }\n            }));\n    }\n}\n"]}